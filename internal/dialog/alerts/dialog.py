from aiogram_dialog import Window, Dialog
from aiogram_dialog.widgets.text import Const, Format, Multi, Case
from aiogram_dialog.widgets.kbd import Button, Column
from sulguk import SULGUK_PARSE_MODE

from internal import interface, model


class AlertsDialog(interface.IAlertsDialog):
    def __init__(
            self,
            tel: interface.ITelemetry,
            alerts_service: interface.IAlertsService,
            alerts_getter: interface.IAlertsGetter,
    ):
        self.tracer = tel.tracer()
        self.logger = tel.logger()
        self.alerts_service = alerts_service
        self.alerts_getter = alerts_getter

    def get_dialog(self) -> Dialog:
        return Dialog(
            self.get_video_generated_alert_window(),
            self.get_publication_approved_alert_window()
        )

    def get_video_generated_alert_window(self) -> Window:
        """–û–∫–Ω–æ —Å–æ —Å–ø–∏—Å–∫–æ–º –≥–æ—Ç–æ–≤—ã—Ö –≤–∏–¥–µ–æ"""
        return Window(
            Multi(
                Case(
                    {
                        True: Multi(
                            Const("üéâ <b>–í–∞—à–∏ –≤–∏–¥–µ–æ –≥–æ—Ç–æ–≤—ã!</b><br><br>"),
                            Format("üìä –£ –≤–∞—Å –≥–æ—Ç–æ–≤–æ <b>{alerts_count}</b> {alerts_word}:<br><br>"),
                            # –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–ª–µ—Ä—Ç–æ–≤
                            Format("üìã <b>–°–ø–∏—Å–æ–∫ –≥–æ—Ç–æ–≤—ã—Ö –≤–∏–¥–µ–æ:</b><br>{alerts_text}"),
                        ),
                        False: Multi(
                            Const("üéâ <b>–í–∞—à–µ –≤–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ!</b><br><br>"),
                            Format("‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ <b>{video_count}</b> {video_word} –∏–∑ –≤–∏–¥–µ–æ:<br>"),
                            Format("üé¨ <a href='{youtube_video_reference}'>üì∫ –ò—Å—Ö–æ–¥–Ω–æ–µ –≤–∏–¥–µ–æ</a><br><br>"),
                        ),
                    },
                    selector="has_multiple_alerts"
                ),
                Const("üëâ <u>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —á–µ—Ä–Ω–æ–≤–∏–∫–∏</u>, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç! üéØ"),
                sep="",
            ),

            Column(
                Button(
                    Const("üìù –ß–µ—Ä–Ω–æ–≤–∏–∫–∏ –Ω–∞—Ä–µ–∑–æ–∫"),
                    id="to_video_drafts_from_alert",
                    on_click=self.alerts_service.handle_go_to_video_drafts,
                ),
                Button(
                    Const("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
                    id="to_main_menu_from_video_cut_alert",
                    on_click=self.alerts_service.handle_go_to_main_menu,
                ),
            ),

            state=model.AlertsStates.video_generated_alert,
            getter=self.alerts_getter.get_video_alert_data,
            parse_mode=SULGUK_PARSE_MODE,
        )

    def get_publication_approved_alert_window(self) -> Window:
        return Window(
            Multi(
                Case(
                    {
                        True: Multi(
                            Const("üéâ <b>–í–∞—à–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø—Ä–∏–Ω—è—Ç—ã –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º!</b><br><br>"),
                            Format("üìä –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ <b>{alerts_count}</b> {alerts_word}:<br><br>"),
                            Format("üìã <b>–°–ø–∏—Å–æ–∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–π:</b><br>{publications_text}"),
                        ),
                        False: Multi(
                            Const("üéâ <b>–ü—É–±–ª–∏–∫–∞—Ü–∏—è –æ–¥–æ–±—Ä–µ–Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º!</b><br>"),
                            Format("{publication_text}<br>"),
                            Case(
                                {
                                    True: Multi(
                                        Const("<br>üîó <b>–°—Å—ã–ª–∫–∏ –Ω–∞ –≤–∞—à–∏ –ø–æ—Å—Ç—ã:</b><br>"),
                                        Case(
                                            {
                                                True: Format(
                                                    "üì± <b>Telegram:</b> <a href='{telegram_link}'>–ü–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ—Å—Ç—É</a><br>"),
                                                False: Const(""),
                                            },
                                            selector="has_telegram_link"
                                        ),
                                        Case(
                                            {
                                                True: Format(
                                                    "üîµ <b>–í–ö–æ–Ω—Ç–∞–∫—Ç–µ:</b> <a href='{vkontakte_link}'>–ü–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ—Å—Ç—É</a><br>"),
                                                False: Const(""),
                                            },
                                            selector="has_vkontakte_link"
                                        ),
                                    ),
                                    False: Const("<br>üìù <i>–ü—É–±–ª–∏–∫–∞—Ü–∏—è —Ä–∞–∑–º–µ—â–µ–Ω–∞, –Ω–æ —Å—Å—ã–ª–∫–∏ –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã</i>"),
                                },
                                selector="has_post_links"
                            ),
                        ),
                    },
                    selector="has_multiple_alerts"
                ),
                sep="",
            ),

            Column(
                Button(
                    Const("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
                    id="to_main_menu_from_publication_approved_alert",
                    on_click=self.alerts_service.handle_go_to_main_menu,
                ),
            ),

            state=model.AlertsStates.publication_approved_alert,
            getter=self.alerts_getter.get_publication_approved_alert_data,
            parse_mode=SULGUK_PARSE_MODE,
        )
