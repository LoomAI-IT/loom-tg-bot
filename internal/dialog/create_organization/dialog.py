from aiogram_dialog import Window, Dialog, StartMode
from aiogram_dialog.widgets.input import MessageInput
from aiogram_dialog.widgets.text import Const, Format, Multi
from aiogram_dialog.widgets.kbd import Button, Row, Back
from sulguk import SULGUK_PARSE_MODE

from internal import interface, model


class CreateOrganizationDialog(interface.ICreateOrganizationDialog):
    def __init__(
            self,
            tel: interface.ITelemetry,
            create_organization_service: interface.ICreateOrganizationService,
            create_organization_getter: interface.ICreateOrganizationGetter,
    ):
        self.tracer = tel.tracer()
        self.logger = tel.logger()
        self.create_organization_service = create_organization_service
        self.create_organization_getter = create_organization_getter

    def get_dialog(self) -> Dialog:
        return Dialog(
            self.get_create_organization_window(),
            self.get_confirm_cancel_window(),
            self.get_organization_result_window(),
        )

    def get_create_organization_window(self) -> Window:
        return Window(
            Multi(
                Format("{message_to_user}"),
            ),

            MessageInput(
                func=self.create_organization_service.handle_user_message,
            ),

            Button(
                Const("‚ùå –ü—Ä–µ—Ä–≤–∞—Ç—å —Å–æ–∑–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏"),
                id="show_confirm_cancel",
                on_click=lambda c, b, d: d.switch_to(model.CreateOrganizationStates.confirm_cancel),
            ),

            state=model.CreateOrganizationStates.create_organization,
            getter=self.create_organization_getter.get_create_organization_data,
            parse_mode=SULGUK_PARSE_MODE,
        )

    def get_confirm_cancel_window(self) -> Window:
        return Window(
            Multi(
                Const("‚ö†Ô∏è <b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è</b><br><br>"),
                Const("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–µ—Ä–≤–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏?<br><br>"),
                Const("üö® <b>–í–Ω–∏–º–∞–Ω–∏–µ:</b> <i>–ü—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –¥–∏–∞–ª–æ–≥ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –±—É–¥–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å!</i><br>"),
                Const("–í–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –±—É–¥–µ—Ç –ø–æ—Ç–µ—Ä—è–Ω."),
                sep="",
            ),

            Row(
                Button(
                    Const("‚úÖ –î–∞, –∑–∞–≤–µ—Ä—à–∏—Ç—å"),
                    id="confirm_cancel",
                    on_click=self.create_organization_service.handle_confirm_cancel,
                ),
                Back(Const("‚ùå –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–∏–∞–ª–æ–≥")),
            ),

            state=model.CreateOrganizationStates.confirm_cancel,
            parse_mode=SULGUK_PARSE_MODE,
        )

    def get_organization_result_window(self) -> Window:
        return Window(
            Const("–û—Ç–ª–∏—á–Ω–æ! –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞.<br><br>"),
            Const("üìç –ù—É–∂–Ω–æ –Ω–∞–ø–æ–ª–Ω–∏—Ç—å –µ–µ —Ä—É–±—Ä–∏–∫–∞–º–∏. –° –ø–æ–º–æ—â—å—é –Ω–∏—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –±—É–¥—É—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç.<br><br>"),
            Const(
                "–ú–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—É—é —Ä—É–±—Ä–∏–∫—É —Å–µ–π—á–∞—Å –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —ç—Ç–æ–º—É –ø–æ–∑–∂–µ. –ï—â—ë —Ç—ã –º–æ–∂–µ—à—å –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º"),

            Button(
                Const("üè† –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"),
                id="go_to_main_menu",
                on_click=self.create_organization_service.handle_go_to_main_menu,
            ),

            Button(
                Const("–°–æ–∑–¥–∞—Ç—å —Ä—É–±—Ä–∏–∫—É"),
                id="go_to_create_category",
                on_click=self.create_organization_service.go_to_create_category,
            ),

            state=model.CreateOrganizationStates.organization_created,
            parse_mode=SULGUK_PARSE_MODE,
        )
