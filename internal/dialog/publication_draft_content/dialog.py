from aiogram import F
from aiogram_dialog import Window, Dialog, ShowMode
from aiogram_dialog.widgets.text import Const, Format, Multi, Case
from aiogram_dialog.widgets.kbd import Button, Column, Row, Back, ScrollingGroup, Select, NumberedPager, Checkbox
from aiogram_dialog.widgets.input import TextInput, MessageInput
from aiogram_dialog.widgets.media import DynamicMedia
from sulguk import SULGUK_PARSE_MODE

from internal import interface, model


class PublicationDraftDialog(interface.IPublicationDraftDialog):

    def __init__(
            self,
            tel: interface.ITelemetry,
            publication_draft_service: interface.IPublicationDraftService,
            publication_draft_getter: interface.IPublicationDraftGetter,
    ):
        self.tracer = tel.tracer()
        self.logger = tel.logger()
        self.publication_draft_service = publication_draft_service
        self.publication_draft_getter = publication_draft_getter

    def get_dialog(self) -> Dialog:
        return Dialog(
            self.get_publication_list_window(),
            self.get_edit_preview_window(),
            self.get_edit_text_menu_window(),
            self.get_edit_text_window(),
            self.get_edit_image_menu_window(),
            self.get_upload_image_window(),
            self.get_social_network_select_window(),
            self.get_publication_success_window(),
        )

    def get_publication_list_window(self) -> Window:
        """
        –°–ø–∏—Å–æ–∫ —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤ –ø—É–±–ª–∏–∫–∞—Ü–∏–π.
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–≤—å—é —Ç–µ–∫—É—â–µ–≥–æ —á–µ—Ä–Ω–æ–≤–∏–∫–∞ —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π –∫–∞–∫ –≤ –º–æ–¥–µ—Ä–∞—Ü–∏–∏.
        """
        return Window(
            Multi(
                Const("üìÑ <b>–ß–µ—Ä–Ω–æ–≤–∏–∫–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–π</b><br><br>"),
                Case(
                    {
                        True: Multi(
                            Format("{publication_text}<br><br>"),
                            Format("üë§ <b>–ê–≤—Ç–æ—Ä:</b> {creator_name}<br>"),
                            Format("üè∑Ô∏è <b>–†—É–±—Ä–∏–∫–∞:</b> {category_name}<br>"),
                            Format("üìÖ <b>–°–æ–∑–¥–∞–Ω–æ:</b> <code>{created_at}</code><br>"),
                        ),
                        False: Multi(
                            Const("‚úÖ <b>–ù–µ—Ç —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤ –ø—É–±–ª–∏–∫–∞—Ü–∏–π</b><br><br>"),
                            Const("üí´ <i>–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π —á–µ—Ä–Ω–æ–≤–∏–∫ –≤ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–π</i>"),
                        ),
                    },
                    selector="has_publications"
                ),
                sep="",
            ),

            DynamicMedia(
                selector="preview_image_media",
                when="has_image",
            ),

            Row(
                Button(
                    Const("‚¨ÖÔ∏è –ü—Ä–µ–¥"),
                    id="prev_publication",
                    on_click=self.publication_draft_service.handle_navigate_publication,
                    when="has_prev",
                ),
                Button(
                    Format("üìä {current_index}/{total_count}"),
                    id="counter",
                    on_click=lambda c, b, d: c.answer("üìà –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —á–µ—Ä–Ω–æ–≤–∏–∫–∞–º"),
                    when="has_publications",
                ),
                Button(
                    Const("‚û°Ô∏è –°–ª–µ–¥"),
                    id="next_publication",
                    on_click=self.publication_draft_service.handle_navigate_publication,
                    when="has_next",
                ),
                when="has_publications",
            ),

            Column(
                Row(
                    Button(
                        Const("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"),
                        id="edit",
                        on_click=lambda c, b, d: d.switch_to(model.PublicationDraftStates.edit_preview),
                    ),
                    Button(
                        Const("üåê –í—ã–±—Ä–∞—Ç—å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã"),
                        id="select_social_network",
                        on_click=self.publication_draft_service.handle_go_to_social_network_select,
                    ),
                ),
                Row(
                    Button(
                        Const("üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é"),
                        id="send_to_moderation",
                        on_click=self.publication_draft_service.handle_send_to_moderation_with_networks_publication,
                    ),
                    Button(
                        Const("üöÄ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å"),
                        id="publish_now",
                        on_click=self.publication_draft_service.handle_publish_with_selected_networks_publication,
                    ),
                ),
                when="has_publications",
            ),

            Row(
                Button(
                    Const("‚óÄÔ∏è –ú–µ–Ω—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞"),
                    id="back_to_content_menu",
                    on_click=self.publication_draft_service.handle_back_to_content_menu,
                ),
            ),

            state=model.PublicationDraftStates.publication_list,
            getter=self.publication_draft_getter.get_publication_list_data,
            parse_mode=SULGUK_PARSE_MODE,
        )

    def get_edit_preview_window(self) -> Window:
        """
        –ü—Ä–µ–≤—å—é —á–µ—Ä–Ω–æ–≤–∏–∫–∞.
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–≤—å—é —á–µ—Ä–Ω–æ–≤–∏–∫–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
        """
        return Window(
            Multi(
                Const("‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</b><br><br>"),
                Format("{publication_text}<br><br>"),
                Format("üë§ <b>–ê–≤—Ç–æ—Ä:</b> {creator_name}<br>"),
                Format("üè∑Ô∏è <b>–†—É–±—Ä–∏–∫–∞:</b> {category_name}<br>"),
                Format("üìÖ <b>–°–æ–∑–¥–∞–Ω–æ:</b> <code>{created_at}</code><br>"),
                Case(
                    {
                        True: Format("<br>üñºÔ∏è <b>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ {current_image_index} –∏–∑ {total_images}</b>"),
                        False: Const(""),
                    },
                    selector="has_multiple_images"
                ),
                Case(
                    {
                        True: Const("<br><br>‚ö†Ô∏è <b><i>–ï—Å—Ç—å –Ω–µ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è!</i></b>"),
                        False: Const(""),
                    },
                    selector="has_changes"
                ),
                Const("<br><br>üìå <b>–ß—Ç–æ –±—É–¥–µ–º –∏–∑–º–µ–Ω—è—Ç—å?</b>"),
                sep="",
            ),

            Row(
                Button(
                    Const("‚¨ÖÔ∏è –ü—Ä–µ–¥ —á–µ—Ä–Ω–æ–≤–∏–∫"),
                    id="prev_publication",
                    on_click=self.publication_draft_service.handle_navigate_publication,
                    when="has_prev",
                ),
                Button(
                    Format("üìç {current_index}/{total_count}"),
                    id="current_position",
                    on_click=None,
                ),
                Button(
                    Const("‚û°Ô∏è –°–ª–µ–¥ —á–µ—Ä–Ω–æ–≤–∏–∫"),
                    id="next_publication",
                    on_click=self.publication_draft_service.handle_navigate_publication,
                    when="has_next",
                ),
                when="has_multiple_drafts",
            ),

            DynamicMedia(
                selector="preview_image_media",
                when="has_image",
            ),

            Row(
                Button(
                    Const("‚¨ÖÔ∏è –ü—Ä–µ–¥ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"),
                    id="prev_image",
                    on_click=self.publication_draft_service.handle_prev_image,
                    when="has_multiple_images",
                ),
                Button(
                    Const("‚û°Ô∏è –°–ª–µ–¥ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"),
                    id="next_image",
                    on_click=self.publication_draft_service.handle_next_image,
                    when="has_multiple_images",
                ),
                when="has_multiple_images",
            ),

            Row(
                Button(
                    Const("‚úèÔ∏è –¢–µ–∫—Å—Ç"),
                    id="edit_text",
                    on_click=self.publication_draft_service.handle_back_to_edit_text_menu,
                ),
                Button(
                    Const("üé® –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"),
                    id="edit_image",
                    on_click=self.publication_draft_service.handle_go_to_edit_image_menu,
                ),
            ),

            Row(
                Button(
                    Const("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è"),
                    id="save_changes",
                    on_click=self.publication_draft_service.handle_save_changes,
                    when="has_changes",
                ),
            ),

            Row(
                Button(
                    Const("üóë –£–¥–∞–ª–∏—Ç—å"),
                    id="delete",
                    on_click=self.publication_draft_service.handle_delete_publication,
                ),
            ),

            Row(
                Button(
                    Const("üåê –í—ã–±—Ä–∞—Ç—å –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã"),
                    id="select_social_network",
                    on_click=self.publication_draft_service.handle_go_to_social_network_select,
                ),
                Button(
                    Const("üöÄ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å"),
                    id="publish_now",
                    on_click=self.publication_draft_service.handle_publish_with_selected_networks_publication,
                ),
            ),

            Row(
                Button(
                    Const("‚óÄÔ∏è –ú–µ–Ω—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞"),
                    id="back_to_content_menu",
                    on_click=self.publication_draft_service.handle_back_to_content_menu,
                ),
            ),

            state=model.PublicationDraftStates.edit_preview,
            getter=self.publication_draft_getter.get_edit_preview_data,
            parse_mode=SULGUK_PARSE_MODE,
        )

    def get_edit_text_menu_window(self) -> Window:
        """–ú–µ–Ω—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞."""
        return Window(
            Multi(
                Case(
                    {
                        False: Multi(
                            Const("üìù <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞</b><br><br>"),
                            Const("ü§ñ <i>–û–ø–∏—à–∏—Ç–µ, —á—Ç–æ –Ω—É–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –≤ —Ç–µ–∫—Å—Ç–µ ‚Äî —è –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É—é –µ–≥–æ!</i><br><br>"),
                            Const("üí° <b>–ü—Ä–∏–º–µ—Ä—ã:</b><br>"),
                            Const("‚Ä¢ ¬´–°–¥–µ–ª–∞–π —Ç–µ–∫—Å—Ç –∫–æ—Ä–æ—á–µ –∏ –¥–æ–±–∞–≤—å –ø—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é¬ª<br>"),
                            Const("‚Ä¢ ¬´–£–±–µ—Ä–∏ —Å–ª–æ–∂–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã, –ø–∏—à–∏ –ø—Ä–æ—â–µ¬ª<br>"),
                            Const("‚Ä¢ ¬´–î–æ–±–∞–≤—å –±–æ–ª—å—à–µ —ç–º–æ—Ü–∏–π –∏ —Ö–µ—à—Ç–µ–≥–∏¬ª"),
                        ),
                        True: Case(
                            {
                                True: Multi(
                                    Format("üìã <b>–í–∞—à–∏ —É–∫–∞–∑–∞–Ω–∏—è:</b><br>üí≠ <i>¬´{regenerate_prompt}¬ª</i><br><br>"),
                                    Const("‚è≥ <b>–ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä—É—é —Ç–µ–∫—Å—Ç...</b><br>"),
                                    Const("üïê <i>–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ</i>"),
                                ),
                                False: Multi(
                                    Const("‚è≥ <b>–ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä—É—é —Ç–µ–∫—Å—Ç...</b><br>"),
                                    Const("üïê <i>–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ</i>"),
                                ),
                            },
                            selector="has_regenerate_prompt"
                        )
                    },
                    selector="is_regenerating_text"
                ),
                sep="",
            ),

            Column(
                Button(
                    Const("üîÑ –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç"),
                    id="regenerate_all",
                    on_click=self.publication_draft_service.handle_regenerate_text,
                    when=~F["is_regenerating_text"]
                ),
                Button(
                    Const("‚úçÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–π —Ç–µ–∫—Å—Ç"),
                    id="edit_content",
                    on_click=self.publication_draft_service.handle_go_to_edit_text,
                    when=~F["is_regenerating_text"]
                ),
            ),

            TextInput(
                id="regenerate_prompt_input",
                on_success=self.publication_draft_service.handle_regenerate_text_with_prompt,
            ),

            Button(
                Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                id="preview",
                on_click=self.publication_draft_service.handle_back_to_edit_preview_from_text_menu,
                when=~F["is_regenerating_text"]
            ),

            state=model.PublicationDraftStates.edit_text_menu,
            getter=self.publication_draft_getter.get_edit_text_data,
            parse_mode=SULGUK_PARSE_MODE,
        )

    def get_edit_text_window(self) -> Window:
        """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞."""
        return Window(
            Multi(
                Const("‚úçÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞</b><br><br>"),
                Const("<b>–í–∞—à —Ç–µ–∫—Å—Ç:</b><br>"),
                Format("{publication_text}<br><br>"),
                Const("üìù <i>–ù–∞–ø–∏—à–∏—Ç–µ –∏—Ç–æ–≥–æ–≤—ã–π —Ç–µ–∫—Å—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</i>"),
                Case(
                    {
                        True: Const("<br><br>‚ùå <b>–û—à–∏–±–∫–∞:</b> –¢–µ–∫—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º"),
                        False: Const(""),
                    },
                    selector="has_void_text"
                ),
                Case(
                    {
                        True: Const("<br><br>üìè <b>–°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π —Ç–µ–∫—Å—Ç</b><br>üí° <i>–ú–∏–Ω–∏–º—É–º 50 —Å–∏–º–≤–æ–ª–æ–≤</i>"),
                        False: Const(""),
                    },
                    selector="has_small_text"
                ),
                Case(
                    {
                        True: Const("<br><br>üìè <b>–°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç</b><br>‚ö†Ô∏è <i>–ú–∞–∫—Å–∏–º—É–º 4000 —Å–∏–º–≤–æ–ª–æ–≤</i>"),
                        False: Const(""),
                    },
                    selector="has_big_text"
                ),
                sep="",
            ),

            TextInput(
                id="text_input",
                on_success=self.publication_draft_service.handle_edit_text,
            ),

            Button(
                Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                id="edit_text_menu",
                on_click=self.publication_draft_service.handle_back_to_edit_text_menu,
            ),

            state=model.PublicationDraftStates.edit_text,
            getter=self.publication_draft_getter.get_edit_text_data,
            parse_mode=SULGUK_PARSE_MODE,
        )

    def get_edit_image_menu_window(self) -> Window:
        """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º."""
        return Window(
            Multi(
                Const("üñº <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º</b>\n\n"),
                Case(
                    {
                        True: Const("‚úÖ <b>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ</b>\n\n"),
                        False: Const("‚ùå <b>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</b>\n\n"),
                    },
                    selector="has_image"
                ),
                Const("üìå <b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>"),
                sep="",
            ),

            Column(
                Button(
                    Const("üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–≤–æ—ë"),
                    id="upload_image",
                    on_click=self.publication_draft_service.handle_go_to_upload_image,
                ),
                Button(
                    Const("üóë –£–¥–∞–ª–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"),
                    id="remove_image",
                    on_click=self.publication_draft_service.handle_remove_image,
                    when="has_image",
                ),
            ),

            Button(
                Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                id="back_to_preview",
                on_click=self.publication_draft_service.handle_back_to_edit_preview,
            ),

            state=model.PublicationDraftStates.edit_image_menu,
            getter=self.publication_draft_getter.get_image_menu_data,
            parse_mode=SULGUK_PARSE_MODE,
        )

    def get_upload_image_window(self) -> Window:
        """–ó–∞–≥—Ä—É–∑–∫–∞ —Å–≤–æ–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è."""
        return Window(
            Multi(
                Const("üì§ <b>–ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</b>\n\n"),
                Const("üì∏ <b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:</b>\n"),
                Const("<i>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç—ã: JPG, PNG, GIF</i>\n"),
                Const("<i>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 10 –ú–ë</i>"),
                sep="",
            ),

            MessageInput(
                func=self.publication_draft_service.handle_image_upload,
            ),

            Button(
                Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                id="back_to_image_menu",
                on_click=self.publication_draft_service.handle_go_to_edit_image_menu,
            ),

            state=model.PublicationDraftStates.upload_image,
            getter=self.publication_draft_getter.get_upload_image_data,
            parse_mode=SULGUK_PARSE_MODE,
        )

    def get_social_network_select_window(self) -> Window:
        """–í—ã–±–æ—Ä —Å–æ—Ü—Å–µ—Ç–µ–π –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏."""
        return Window(
            Multi(
                Const("üåê <b>–í—ã–±–æ—Ä —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π</b>\n\n"),
                Const("üìã <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏:</b>\n\n"),
                Const("‚úÖ <b>–í—ã–±–µ—Ä–∏—Ç–µ, –≥–¥–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å:</b>"),
                sep="",
            ),

            Column(
                Checkbox(
                    Const("‚úÖ Telegram"),
                    Const("‚ùå Telegram"),
                    id="telegram_checkbox",
                    default=False,
                    on_state_changed=self.publication_draft_service.handle_toggle_social_network,
                    when="telegram_connected",
                ),
                Checkbox(
                    Const("‚úÖ VKontakte"),
                    Const("‚ùå VKontakte"),
                    id="vkontakte_checkbox",
                    default=False,
                    on_state_changed=self.publication_draft_service.handle_toggle_social_network,
                    when="vkontakte_connected",
                ),
            ),

            Row(
                Button(
                    Const("üöÄ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å"),
                    id="publish_with_networks",
                    on_click=self.publication_draft_service.handle_publish_with_selected_networks_publication,
                ),
                Button(
                    Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                    id="back_to_preview",
                    on_click=self.publication_draft_service.handle_back_to_edit_preview,
                ),
            ),

            state=model.PublicationDraftStates.social_network_select,
            getter=self.publication_draft_getter.get_social_network_select_data,
            parse_mode=SULGUK_PARSE_MODE,
        )

    def get_publication_success_window(self) -> Window:
        """–û–∫–Ω–æ —É—Å–ø–µ—à–Ω–æ–π –ø—É–±–ª–∏–∫–∞—Ü–∏–∏."""
        return Window(
            Multi(
                Const("üéâ <b>–ü—É–±–ª–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–º–µ—â–µ–Ω–∞!</b><br>"),
                Case(
                    {
                        True: Multi(
                            Const("üîó <b>–°—Å—ã–ª–∫–∏ –Ω–∞ –≤–∞—à–∏ –ø–æ—Å—Ç—ã:</b><br>"),
                            Case(
                                {
                                    True: Format(
                                        "üì± <b>Telegram:</b> <a href='{telegram_link}'>–ü–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ—Å—Ç—É</a><br>"),
                                    False: Const(""),
                                },
                                selector="has_telegram_link"
                            ),
                            Case(
                                {
                                    True: Format(
                                        "üîµ <b>–í–ö–æ–Ω—Ç–∞–∫—Ç–µ:</b> <a href='{vkontakte_link}'>–ü–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ—Å—Ç—É</a><br>"),
                                    False: Const(""),
                                },
                                selector="has_vkontakte_link"
                            ),
                            Const("<br>üí° <i>–°—Å—ã–ª–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ —Ä–∞–∑–¥–µ–ª–µ \"–ú–æ–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏\"</i>"),
                        ),
                        False: Const("üìù <i>–ü—É–±–ª–∏–∫–∞—Ü–∏—è —Ä–∞–∑–º–µ—â–µ–Ω–∞, –Ω–æ —Å—Å—ã–ª–∫–∏ –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã</i>"),
                    },
                    selector="has_post_links"
                ),
                sep="",
            ),

            Button(
                Const("üìã –ö —Å–ø–∏—Å–∫—É —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤"),
                id="go_to_draft_list",
                on_click=self.publication_draft_service.handle_back_to_publication_list,
            ),

            state=model.PublicationDraftStates.publication_success,
            getter=self.publication_draft_getter.get_publication_success_data,
            parse_mode=SULGUK_PARSE_MODE,
        )