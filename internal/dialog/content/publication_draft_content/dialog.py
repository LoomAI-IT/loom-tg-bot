from aiogram_dialog import Window, Dialog
from aiogram_dialog.widgets.text import Const, Format, Multi, Case
from aiogram_dialog.widgets.kbd import Button, Column, Row, Back, ScrollingGroup, Select, NumberedPager, Checkbox
from aiogram_dialog.widgets.input import TextInput, MessageInput
from aiogram_dialog.widgets.media import DynamicMedia

from internal import interface, model


class PublicationDraftDialog(interface.IPublicationDraftDialog):

    def __init__(
            self,
            tel: interface.ITelemetry,
            publication_draft_service: interface.IPublicationDraftService,
            publication_draft_getter: interface.IPublicationDraftGetter,
    ):
        self.tracer = tel.tracer()
        self.logger = tel.logger()
        self.publication_draft_service = publication_draft_service
        self.publication_draft_getter = publication_draft_getter

    def get_dialog(self) -> Dialog:
        return Dialog(
            self.get_publication_list_window(),
            self.get_edit_preview_window(),
            self.get_edit_text_menu_window(),
            self.get_regenerate_text_window(),
            self.get_edit_title_window(),
            self.get_edit_description_window(),
            self.get_edit_content_window(),
            self.get_edit_image_menu_window(),
            self.get_generate_image_window(),
            self.get_upload_image_window(),
            self.get_edit_tags_window(),
            self.get_social_network_select_window(),
        )

    def get_publication_list_window(self) -> Window:
        """
        üè† –ì–õ–ê–í–ù–û–ï –û–ö–ù–û - –°–ø–∏—Å–æ–∫ —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤ –ø—É–±–ª–∏–∫–∞—Ü–∏–π
        –≠—Ç–æ—Ç –≤–∏–¥–∂–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≤—Å–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∏ –≤ –≤–∏–¥–µ —Å–∫—Ä–æ–ª–ª—å–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
        """
        return Window(
            Multi(
                Const("üìÑ <b>–ß–µ—Ä–Ω–æ–≤–∏–∫–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–π</b>\n\n"),
                Case(
                    {
                        True: Multi(
                            Format("üìä –í—Å–µ–≥–æ —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤: <b>{publications_count}</b>\n\n"),
                            Const("üìã <i>–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–±–ª–∏–∫–∞—Ü–∏—é –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</i>"),
                        ),
                        False: Const("üìù <i>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤ –ø—É–±–ª–∏–∫–∞—Ü–∏–π</i>"),
                    },
                    selector="has_publications"
                ),
                sep="",
            ),

            # üìú –°–ö–†–û–õ–õ-–°–ü–ò–°–û–ö —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤ (–∞–Ω–∞–ª–æ–≥ change_employee)
            ScrollingGroup(
                Select(
                    # üìå –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ + –¥–∞—Ç—É —Å–æ–∑–¥–∞–Ω–∏—è
                    Format("üìÑ {item[title]}\nüóì {item[created_date]}"),
                    id="publication_select",
                    items="publications",  # –°–ø–∏—Å–æ–∫ –ø—É–±–ª–∏–∫–∞—Ü–∏–π –æ—Ç –≥–µ—Ç—Ç–µ—Ä–∞
                    item_id_getter=lambda item: str(item["id"]),
                    on_click=self.publication_draft_service.handle_select_publication,
                ),
                id="publication_scroll",
                width=1,
                height=6,  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º 6 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∑–∞ —Ä–∞–∑
                hide_on_single_page=True,
                when="has_publications",
            ),

            # üìÑ –ü–ê–ì–ò–ù–ê–¶–ò–Ø –¥–ª—è –±–æ–ª—å—à–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤
            NumberedPager(
                scroll="publication_scroll",
                when="show_pager",
            ),

            # ‚¨ÖÔ∏è –ö–ù–û–ü–ö–ê –ù–ê–ó–ê–î –≤ –∫–æ–Ω—Ç–µ–Ω—Ç-–º–µ–Ω—é
            Button(
                Const("‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞"),
                id="back_to_content_menu",
                on_click=self.publication_draft_service.handle_back_to_content_menu,
            ),

            state=model.PublicationDraftStates.publication_list,
            getter=self.publication_draft_getter.get_publication_list_data,
            parse_mode="HTML",
        )

    def get_edit_preview_window(self) -> Window:
        """
        üëÅÔ∏è –û–ö–ù–û –ü–†–ï–í–¨–Æ - –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∞ + –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —á–µ—Ä–Ω–æ–≤–∏–∫–∞ –∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
        """
        return Window(
            Multi(
                Const("üìÑ <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∞</b>\n\n"),
                Format("üè∑ –†—É–±—Ä–∏–∫–∞: <b>{category_name}</b>\n"),
                Const("‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n"),
                Format("<b>{publication_title}</b>\n\n"),  # –ù–∞–∑–≤–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
                Format("{publication_content}\n\n"),       # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç
                Case(
                    {
                        True: Format("üè∑ –¢–µ–≥–∏: {publication_tags}"),
                        False: Const(""),
                    },
                    selector="has_tags"
                ),
                Case(
                    {
                        True: Format("\nüñº –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: –µ—Å—Ç—å"),
                        False: Const("\nüñº –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: –Ω–µ—Ç"),
                    },
                    selector="has_image"
                ),
                Const("\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ"),
                sep="",
            ),

            # üñºÔ∏è –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ï (–µ—Å–ª–∏ –µ—Å—Ç—å)
            DynamicMedia(
                selector="preview_image_media",
                when="has_image",
            ),

            # üéÆ –ù–ê–í–ò–ì–ê–¶–ò–Ø –ø–æ —á–µ—Ä–Ω–æ–≤–∏–∫–∞–º (—Å—Ç—Ä–µ–ª–∫–∏ –≤–ª–µ–≤–æ/–≤–ø—Ä–∞–≤–æ)
            Row(
                Button(
                    Const("‚¨ÖÔ∏è"),
                    id="prev_publication",
                    on_click=self.publication_draft_service.handle_navigate_publication,
                    when="has_prev",
                ),
                Button(
                    Format("üìç {current_index}/{total_count}"),
                    id="current_position",
                    on_click=None,  # –ü—Ä–æ—Å—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞
                ),
                Button(
                    Const("‚û°Ô∏è"),
                    id="next_publication", 
                    on_click=self.publication_draft_service.handle_navigate_publication,
                    when="has_next",
                ),
            ),

            # üõ†Ô∏è –û–°–ù–û–í–ù–´–ï –î–ï–ô–°–¢–í–ò–Ø –° –ß–ï–†–ù–û–í–ò–ö–û–ú
            Column(
                Row(
                    Button(
                        Const("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"),
                        id="edit_text_menu",
                        on_click=lambda c, b, d: d.switch_to(model.PublicationDraftStates.edit_text_menu),
                    ),
                    Button(
                        Const("üóë –£–¥–∞–ª–∏—Ç—å"),
                        id="delete_publication",
                        on_click=self.publication_draft_service.handle_delete_publication,
                    ),
                ),
                Button(
                    Const("üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é"),
                    id="send_to_moderation",
                    on_click=self.publication_draft_service.handle_send_to_moderation_with_networks_publication,
                    when="requires_moderation",
                ),
                Button(
                    Const("üöÄ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å"),
                    id="publish_now",
                    on_click=self.publication_draft_service.handle_publish_with_selected_networks_publication,
                    when="can_publish_directly",
                ),
            ),

            # ‚óÄÔ∏è –ù–ê–ó–ê–î –∫ —Å–ø–∏—Å–∫—É —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤
            Button(
                Const("‚óÄÔ∏è –ö —Å–ø–∏—Å–∫—É —á–µ—Ä–Ω–æ–≤–∏–∫–æ–≤"),
                id="back_to_list",
                on_click=self.publication_draft_service.handle_back_to_publication_list,
            ),

            state=model.PublicationDraftStates.edit_preview,
            getter=self.publication_draft_getter.get_edit_preview_data,
            parse_mode="HTML",
        )

    def get_edit_text_menu_window(self) -> Window:
        """
        ‚úèÔ∏è –ú–ï–ù–Æ –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–Ø - –í—ã–±–æ—Ä —á—Ç–æ –∏–º–µ–Ω–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
        """
        return Window(
            Multi(
                Const("‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∞</b>\n\n"),
                Const("üìå <b>–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å:</b>"),
                sep="",
            ),

            Column(
                Button(
                    Const("üîÑ –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–µ—Å—å —Ç–µ–∫—Å—Ç"),
                    id="regenerate_all",
                    on_click=self.publication_draft_service.handle_regenerate_text,
                ),
                Button(
                    Const("üîÑ –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å –ø—Ä–æ–º–ø—Ç–æ–º"),
                    id="regenerate_with_prompt",
                    on_click=lambda c, b, d: d.switch_to(model.PublicationDraftStates.regenerate_text),
                ),
                Button(
                    Const("üìù –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ"),
                    id="edit_title",
                    on_click=lambda c, b, d: d.switch_to(model.PublicationDraftStates.edit_title),
                ),
                Button(
                    Const("üìÑ –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç"),
                    id="edit_content",
                    on_click=lambda c, b, d: d.switch_to(model.PublicationDraftStates.edit_content),
                ),
                Button(
                    Const("üè∑ –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–≥–∏"),
                    id="edit_tags",
                    on_click=lambda c, b, d: d.switch_to(model.PublicationDraftStates.edit_tags),
                ),
                Button(
                    Const("üñº –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º"),
                    id="edit_image_menu",
                    on_click=lambda c, b, d: d.switch_to(model.PublicationDraftStates.edit_image_menu),
                ),
            ),

            Button(
                Const("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –ø—Ä–µ–≤—å—é"),
                id="back_to_preview",
                on_click=lambda c, b, d: d.switch_to(model.PublicationDraftStates.edit_preview),
            ),

            state=model.PublicationDraftStates.edit_text_menu,
            getter=self.publication_draft_getter.get_edit_text_menu_data,
            parse_mode="HTML",
        )

    def get_regenerate_text_window(self) -> Window:
        """
        üîÑ –ü–ï–†–ï–ì–ï–ù–ï–†–ê–¶–ò–Ø —Å –ø—Ä–æ–º–ø—Ç–æ–º (–∫–æ–ø–∏—è –∏–∑ generate_publication)
        """
        return Window(
            Multi(
                Const("üîÑ <b>–ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ —É–∫–∞–∑–∞–Ω–∏—è–º–∏</b>\n\n"),
                Case(
                    {
                        True: Multi(
                            Format("üìå <b>–í–∞—à–∏ —É–∫–∞–∑–∞–Ω–∏—è:</b>\n<i>{regenerate_prompt}</i>\n\n"),
                            Const("‚è≥ <b>–ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä—É—é —Ç–µ–∫—Å—Ç...</b>\n"),
                            Const("–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –≤—Ä–µ–º—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ."),
                        ),
                        False: Multi(
                            Case(
                                {
                                    True: Const("‚ö†Ô∏è <b>–û—à–∏–±–∫–∞:</b> –£–∫–∞–∂–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è\n\n"),
                                    False: Const(""),
                                },
                                selector="has_void_regenerate_prompt"
                            ),
                            Const("üí° <b>–í–≤–µ–¥–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è:</b>\n"),
                            Const("<i>–ù–∞–ø—Ä–∏–º–µ—Ä: —Å–¥–µ–ª–∞–π —Ç–µ–∫—Å—Ç –∫–æ—Ä–æ—á–µ, –¥–æ–±–∞–≤—å –±–æ–ª—å—à–µ —ç–º–æ—Ü–∏–π –∏ —Ç.–¥.</i>\n\n"),
                            Case(
                                {
                                    True: Format("üìå <b>–í–∞—à–∏ —É–∫–∞–∑–∞–Ω–∏—è:</b>\n<i>{regenerate_prompt}</i>"),
                                    False: Const("üí¨ –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞..."),
                                },
                                selector="has_regenerate_prompt"
                            ),
                        ),
                    },
                    selector="is_regenerating_text"
                ),
                sep="",
            ),

            TextInput(
                id="regenerate_prompt_input",
                on_success=self.publication_draft_service.handle_regenerate_text_with_prompt,
            ),

            Button(
                Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                id="back_to_edit_menu",
                on_click=lambda c, b, d: d.switch_to(model.PublicationDraftStates.edit_text_menu),
                when="~is_regenerating_text",
            ),

            state=model.PublicationDraftStates.regenerate_text,
            getter=self.publication_draft_getter.get_regenerate_text_data,
            parse_mode="HTML",
        )

    def get_edit_title_window(self) -> Window:
        """
        üìù –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï –ù–ê–ó–í–ê–ù–ò–Ø
        """
        return Window(
            Multi(
                Const("üìù <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è</b>\n\n"),
                Format("–¢–µ–∫—É—â–µ–µ: <b>{publication_title}</b>\n\n"),
                Case(
                    {
                        True: Const("‚ö†Ô∏è <b>–û—à–∏–±–∫–∞:</b> –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º\n\n"),
                        False: Const(""),
                    },
                    selector="has_void_title"
                ),
                Const("‚úçÔ∏è <b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:</b>"),
                sep="",
            ),

            TextInput(
                id="title_input",
                on_success=self.publication_draft_service.handle_edit_title_save,
            ),

            Button(
                Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                id="back_to_edit_menu",
                on_click=lambda c, b, d: d.switch_to(model.PublicationDraftStates.edit_text_menu),
            ),

            state=model.PublicationDraftStates.edit_title,
            getter=self.publication_draft_getter.get_edit_title_data,
            parse_mode="HTML",
        )

    def get_edit_description_window(self) -> Window:
        """
        üìù –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï –û–ü–ò–°–ê–ù–ò–Ø (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ –æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç–∞)
        """
        return Window(
            Multi(
                Const("üìù <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è</b>\n\n"),
                Format("–¢–µ–∫—É—â–µ–µ: <i>{publication_description}</i>\n\n"),
                Const("‚úçÔ∏è <b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:</b>"),
                sep="",
            ),

            TextInput(
                id="description_input",
                on_success=self.publication_draft_service.handle_edit_description_save,
            ),

            Button(
                Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                id="back_to_edit_menu",
                on_click=lambda c, b, d: d.switch_to(model.PublicationDraftStates.edit_text_menu),
            ),

            state=model.PublicationDraftStates.edit_description,
            getter=self.publication_draft_getter.get_edit_description_data,
            parse_mode="HTML",
        )

    def get_edit_content_window(self) -> Window:
        """
        üìÑ –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï –û–°–ù–û–í–ù–û–ì–û –¢–ï–ö–°–¢–ê
        """
        return Window(
            Multi(
                Const("üìÑ <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏</b>\n\n"),
                Case(
                    {
                        True: Const("‚ö†Ô∏è <b>–û—à–∏–±–∫–∞:</b> –¢–µ–∫—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º\n\n"),
                        False: Const(""),
                    },
                    selector="has_void_content"
                ),
                Const("‚úçÔ∏è <b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ç–µ–∫—Å—Ç:</b>\n"),
                Const("<i>–¢–µ–∫—É—â–∏–π —Ç–µ–∫—Å—Ç –ø–æ–∫–∞–∑–∞–Ω –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º –æ–∫–Ω–µ</i>"),
                sep="",
            ),

            TextInput(
                id="content_input",
                on_success=self.publication_draft_service.handle_edit_content_save,
            ),

            Button(
                Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                id="back_to_edit_menu",
                on_click=lambda c, b, d: d.switch_to(model.PublicationDraftStates.edit_text_menu),
            ),

            state=model.PublicationDraftStates.edit_content,
            getter=self.publication_draft_getter.get_edit_content_data,
            parse_mode="HTML",
        )

    def get_edit_image_menu_window(self) -> Window:
        """
        üñºÔ∏è –£–ü–†–ê–í–õ–ï–ù–ò–ï –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ï–ú
        """
        return Window(
            Multi(
                Const("üñº <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º</b>\n\n"),
                Case(
                    {
                        True: Const("‚úÖ <b>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ</b>\n\n"),
                        False: Const("‚ùå <b>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</b>\n\n"),
                    },
                    selector="has_image"
                ),
                Const("üìå <b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>"),
                sep="",
            ),

            Column(
                Button(
                    Const("üé® –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å –ø—Ä–æ–º–ø—Ç–æ–º"),
                    id="generate_image_prompt",
                    on_click=lambda c, b, d: d.switch_to(model.PublicationDraftStates.generate_image),
                ),
                Button(
                    Const("üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–≤–æ—ë"),
                    id="upload_image",
                    on_click=lambda c, b, d: d.switch_to(model.PublicationDraftStates.upload_image),
                ),
                Button(
                    Const("üóë –£–¥–∞–ª–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"),
                    id="remove_image",
                    on_click=self.publication_draft_service.handle_delete_publication,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –º–µ—Ç–æ–¥
                    when="has_image",
                ),
            ),

            Button(
                Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                id="back_to_edit_menu",
                on_click=lambda c, b, d: d.switch_to(model.PublicationDraftStates.edit_text_menu),
            ),

            state=model.PublicationDraftStates.edit_image_menu,
            getter=self.publication_draft_getter.get_edit_image_menu_data,
            parse_mode="HTML",
        )

    def get_generate_image_window(self) -> Window:
        """
        üé® –ì–ï–ù–ï–†–ê–¶–ò–Ø –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø —Å –ø—Ä–æ–º–ø—Ç–æ–º
        """
        return Window(
            Multi(
                Const("üé® <b>–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</b>\n\n"),
                Const("üí° <b>–û–ø–∏—à–∏—Ç–µ –∂–µ–ª–∞–µ–º–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:</b>\n"),
                Const("<i>–ù–∞–ø—Ä–∏–º–µ—Ä: –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω–∞—è –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è –≤ —Å–∏–Ω–∏—Ö —Ç–æ–Ω–∞—Ö</i>\n\n"),
                Case(
                    {
                        True: Format("üìå <b>–í–∞—à–µ –æ–ø–∏—Å–∞–Ω–∏–µ:</b>\n<i>{image_prompt}</i>"),
                        False: Const("üí¨ –û–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞..."),
                    },
                    selector="has_image_prompt"
                ),
                sep="",
            ),

            TextInput(
                id="image_prompt_input",
                on_success=self.publication_draft_service.handle_edit_image_menu_save,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –º–µ—Ç–æ–¥
            ),

            Button(
                Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                id="back_to_image_menu",
                on_click=lambda c, b, d: d.switch_to(model.PublicationDraftStates.edit_image_menu),
            ),

            state=model.PublicationDraftStates.generate_image,
            getter=self.publication_draft_getter.get_generate_image_data,
            parse_mode="HTML",
        )

    def get_upload_image_window(self) -> Window:
        """
        üì§ –ó–ê–ì–†–£–ó–ö–ê –°–í–û–ï–ì–û –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–Ø
        """
        return Window(
            Multi(
                Const("üì§ <b>–ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</b>\n\n"),
                Const("üì∏ <b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:</b>\n"),
                Const("<i>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç—ã: JPG, PNG, GIF</i>\n"),
                Const("<i>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: 10 –ú–ë</i>"),
                sep="",
            ),

            MessageInput(
                func=self.publication_draft_service.handle_edit_image_menu_save,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –º–µ—Ç–æ–¥
            ),

            Button(
                Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                id="back_to_image_menu",
                on_click=lambda c, b, d: d.switch_to(model.PublicationDraftStates.edit_image_menu),
            ),

            state=model.PublicationDraftStates.upload_image,
            getter=self.publication_draft_getter.get_upload_image_data,
            parse_mode="HTML",
        )

    def get_edit_tags_window(self) -> Window:
        """
        üè∑Ô∏è –†–ï–î–ê–ö–¢–ò–†–û–í–ê–ù–ò–ï –¢–ï–ì–û–í
        """
        return Window(
            Multi(
                Const("üè∑ <b>–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–≥–æ–≤</b>\n\n"),
                Format("–¢–µ–∫—É—â–∏–µ —Ç–µ–≥–∏: <b>{publication_tags}</b>\n\n"),
                Const("‚úçÔ∏è <b>–í–≤–µ–¥–∏—Ç–µ —Ç–µ–≥–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é:</b>\n"),
                Const("<i>–ù–∞–ø—Ä–∏–º–µ—Ä: –º–∞—Ä–∫–µ—Ç–∏–Ω–≥, –ø—Ä–æ–¥–∞–∂–∏, SMM</i>"),
                sep="",
            ),

            TextInput(
                id="tags_input",
                on_success=self.publication_draft_service.handle_edit_tags_save,
            ),

            Button(
                Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                id="back_to_edit_menu",
                on_click=lambda c, b, d: d.switch_to(model.PublicationDraftStates.edit_text_menu),
            ),

            state=model.PublicationDraftStates.edit_tags,
            getter=self.publication_draft_getter.get_edit_tags_data,
            parse_mode="HTML",
        )

    def get_social_network_select_window(self) -> Window:
        """
        üåê –í–´–ë–û–† –°–û–¶–°–ï–¢–ï–ô –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
        """
        return Window(
            Multi(
                Const("üåê <b>–í—ã–±–æ—Ä —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π</b>\n\n"),
                Const("üìã <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏:</b>\n\n"),
                Const("‚úÖ <b>–í—ã–±–µ—Ä–∏—Ç–µ, –≥–¥–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å:</b>"),
                sep="",
            ),

            Column(
                Checkbox(
                    Const("‚úÖ Telegram"),
                    Const("‚ùå Telegram"),
                    id="telegram_checkbox",
                    default=False,
                    on_state_changed=self.publication_draft_service.handle_toggle_social_network,
                    when="telegram_connected",
                ),
                Checkbox(
                    Const("‚úÖ VKontakte"),
                    Const("‚ùå VKontakte"),
                    id="vkontakte_checkbox",
                    default=False,
                    on_state_changed=self.publication_draft_service.handle_toggle_social_network,
                    when="vkontakte_connected",
                ),
            ),

            Row(
                Button(
                    Const("üöÄ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å"),
                    id="publish_with_networks",
                    on_click=self.publication_draft_service.handle_publish_with_selected_networks_publication,
                ),
                Button(
                    Const("‚óÄÔ∏è –ù–∞–∑–∞–¥"),
                    id="back_to_preview",
                    on_click=lambda c, b, d: d.switch_to(model.PublicationDraftStates.edit_preview),
                ),
            ),

            state=model.PublicationDraftStates.social_network_select,
            getter=self.publication_draft_getter.get_social_network_select_data,
            parse_mode="HTML",
        )