from aiogram_dialog import Window, Dialog
from aiogram_dialog.widgets.text import Const, Format, Multi, Case
from aiogram_dialog.widgets.kbd import Button, Column
from aiogram_dialog.widgets.input import MessageInput
from sulguk import SULGUK_PARSE_MODE

from internal import interface, model


class GenerateVideoCutDialog(interface.IGenerateVideoCutDialog):
    def __init__(
            self,
            tel: interface.ITelemetry,
            generate_video_cut_service: interface.IGenerateVideoCutService,
            generate_video_cut_getter: interface.IGenerateVideoCutGetter,
    ):
        self.tracer = tel.tracer()
        self.logger = tel.logger()
        self.generate_video_cut_service = generate_video_cut_service
        self.generate_video_cut_getter = generate_video_cut_getter

    def get_dialog(self) -> Dialog:
        return Dialog(
            self.get_youtube_link_input_window(),
        )

    def get_youtube_link_input_window(self) -> Window:
        return Window(
            Multi(
                Case(
                    {
                        True: Multi(
                            Const("‚è≥ <b>–í–∏–¥–µ–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è...</b><br><br>"),
                            Const("üì¨ <b>–Ø —É–≤–µ–¥–æ–º–ª—é –≤–∞—Å, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –≤–∏–¥–µ–æ –±—É–¥—É—Ç –≥–æ—Ç–æ–≤—ã!</b><br><br>"),
                        ),
                        False: Multi(
                            # Error messages
                            Case(
                                {
                                    True: Const("‚ùå <b>–û—à–∏–±–∫–∞:</b> <i>–ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ YouTube</i><br><br>"),
                                    False: Const(""),
                                },
                                selector="has_invalid_youtube_url"
                            ),

                            # Instructions
                            Const("üìã <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</b><br>"),
                            Const("‚îå üîó –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –≤–∏–¥–µ–æ<br>"),
                            Const("‚îú ‚úÇÔ∏è –Ø —Å–æ–∑–¥–∞–º –∏–∑ –Ω–µ–≥–æ –∫–æ—Ä–æ—Ç–∫–∏–µ –≤–∏–¥–µ–æ-–Ω–∞—Ä–µ–∑–∫–∏<br>"),
                            Const("‚îî üìÅ –ì–æ—Ç–æ–≤—ã–µ –≤–∏–¥–µ–æ –ø–æ—è–≤—è—Ç—Å—è –≤ —Ä–∞–∑–¥–µ–ª–µ <i>\"–ß–µ—Ä–Ω–æ–≤–∏–∫–∏\"</i><br><br>"),
                            Const("üéØ <b>–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube –≤–∏–¥–µ–æ:</b><br>"),
                            Const("üí° <i>–ù–∞–ø—Ä–∏–º–µ—Ä:</i> <code>https://www.youtube.com/watch?v=VIDEO_ID</code><br><br>"),

                        ),
                    },
                    selector="is_processing_video"
                ),
                sep="",
            ),

            MessageInput(
                func=self.generate_video_cut_service.handle_youtube_link_input,
                content_types=["text"],
            ),

            Column(
                Button(
                    Const("üè† –í –º–µ–Ω—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞"),
                    id="to_content_menu",
                    on_click=self.generate_video_cut_service.handle_go_to_content_menu,
                ),
            ),

            state=model.GenerateVideoCutStates.input_youtube_link,
            getter=self.generate_video_cut_getter.get_youtube_input_data,
            parse_mode=SULGUK_PARSE_MODE,
        )