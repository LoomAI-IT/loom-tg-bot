from aiogram import F
from aiogram_dialog import Window, Dialog
from aiogram_dialog.widgets.input import TextInput, MessageInput
from aiogram_dialog.widgets.text import Const, Format, Case, Multi
from aiogram_dialog.widgets.kbd import Button, Column, Row
from sulguk import SULGUK_PARSE_MODE

from internal import interface, model


class MainMenuDialog(interface.IMainMenuDialog):
    def __init__(
            self,
            tel: interface.ITelemetry,
            main_menu_service: interface.IMainMenuService,
            main_menu_getter: interface.IMainMenuGetter,
    ):
        self.tracer = tel.tracer()
        self.logger = tel.logger()
        self.main_menu_service = main_menu_service
        self.main_menu_getter = main_menu_getter

    def get_dialog(self) -> Dialog:
        return Dialog(
            self.get_main_menu_window(),
        )

    def get_main_menu_window(self) -> Window:
        return Window(
            Case(
                {
                    False: Multi(
                        Case(
                            {
                                True: Format("üîÑ <b>–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏</b> <br><br>"),
                                False: Const(""),
                            },
                            selector="show_error_recovery",
                        ),
                        Format("üëã –ü—Ä–∏–≤–µ—Ç, {name}! –Ø –±—É–¥—É —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è —Ç–≤–æ–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ –≤–º–µ—Å—Ç–µ —Å —Ç–æ–±–æ–π. <br><br>"),
                        Const("–†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ –æ —á—ë–º-–Ω–∏–±—É–¥—å —Ç–µ–∫—Å—Ç–æ–º –∏–ª–∏ –≥–æ–ª–æ—Å–æ–º ‚Äî –∏ –Ω–∞—á–Ω—ë–º ‚ú® <br><br>"),
                        Const("–ì–æ—Ç–æ–≤? –ñ–¥—É —Ç–≤–æ—ë —Å–æ–æ–±—â–µ–Ω–∏–µ! –ò–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µüëá <br><br>"),
                        # Text input error messages
                        Case(
                            {
                                True: Const("<br><br>‚ùå <b>–û—à–∏–±–∫–∞:</b> –¢–µ–∫—Å—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º"),
                                False: Const(""),
                            },
                            selector="has_void_text_prompt"
                        ),
                        Case(
                            {
                                True: Const("<br><br>üìè <b>–°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π —Ç–µ–∫—Å—Ç</b><br/><i>–ú–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤</i>"),
                                False: Const(""),
                            },
                            selector="has_small_text_prompt"
                        ),
                        Case(
                            {
                                True: Const("<br><br>üìè <b>–°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç</b><br/><i>–ú–∞–∫—Å–∏–º—É–º 2000 —Å–∏–º–≤–æ–ª–æ–≤</i>"),
                                False: Const(""),
                            },
                            selector="has_big_text_prompt"
                        ),
                        # Voice input error messages
                        Case(
                            {
                                True: Const(
                                    "<br>üé§ <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç</b><br><i>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∞—É–¥–∏–æ—Ñ–∞–π–ª –∏–ª–∏ —Ç–µ–∫—Å—Ç</i>"),
                                False: Const(""),
                            },
                            selector="has_invalid_content_type"
                        ),
                        Case(
                            {
                                True: Const("<br><br>‚è±Ô∏è <b>–°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>\n<i>–ú–∞–∫—Å–∏–º—É–º 5 –º–∏–Ω—É—Ç</i>"),
                                False: Const(""),
                            },
                            selector="has_long_voice_duration"
                        ),
                        Case(
                            {
                                True: Const("<br><br>‚ùå <b>–û—à–∏–±–∫–∞:</b> <i>–ù–µ–≤–µ—Ä–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ YouTube</i>"),
                                False: Const(""),
                            },
                            selector="has_invalid_youtube_url"
                        ),
                        Case(
                            {
                                True: Const("<br><br>üí∞ <b>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤</b><br/><i>–ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –¥–ª—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏ –∞—É–¥–∏–æ</i>"),
                                False: Const(""),
                            },
                            selector="has_insufficient_balance"
                        ),
                    ),
                    True: Const("üîÑ –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏...")
                },
                selector="voice_transcribe"
            ),
            Column(
                Row(
                    Button(
                        Const("üë®‚Äçüíº –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç"),
                        id="personal_profile",
                        on_click=self.main_menu_service.handle_go_to_personal_profile,
                    ),
                    Button(
                        Const("üè¢ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è"),
                        id="organization",
                        on_click=self.main_menu_service.handle_go_to_organization,
                    ),
                ),

                Button(
                    Const("üìù –ö–æ–Ω—Ç–µ–Ω—Ç"),
                    id="content_generation",
                    on_click=self.main_menu_service.handle_go_to_content,
                ),
                when=~F["voice_transcribe"]
            ),

            MessageInput(
                func=self.main_menu_service.handle_text_prompt_input,
            ),

            state=model.MainMenuStates.main_menu,
            getter=self.main_menu_getter.get_main_menu_data,
            parse_mode=SULGUK_PARSE_MODE,
        )
